/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vistas;

/**
 *
 * @author lenovo
 */

import Data.*;
import java.awt.Image;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.filechooser.FileNameExtensionFilter;
public class FrmBiblioteca extends javax.swing.JFrame {
    
    Data data;
    private CListaUsuarios listaUsuarios;
    public CListaImagenes listarImagenes;
    DefaultListModel modelo;
    static String rutaTemporal = "";
    CNodoUsuario usuarioActual;
    CNodoImagen imagenActual;
    CNodoImagen imagenTemporal;
    /**
     * Creates new form FrmBibliotecaa
     */
    public FrmBiblioteca(Data data, String nombreUsuario) {
        initComponents();
        this.data=data;
        this.setTitle("Biblioteca");
        modelo = new DefaultListModel();
        listaUsuarios=data.getListaUsuarios();
        usuarioActual = listaUsuarios.GetUsuario(nombreUsuario);
        txtUsuarioRegistrado.setText(nombreUsuario);
        CListaImagenes listarImagen = new CListaImagenes();
        jListCategorias.setModel(modelo);
        
        cargarCategorias();
        
        jListCategorias.addListSelectionListener(new ListSelectionListener() {
        @Override
        
            public void valueChanged(ListSelectionEvent e) {
                String selectedValue = jListCategorias.getSelectedValue();
                txtCategoria.setText(selectedValue);
                txtCategoria.setEditable(false);
                lblImagen.setIcon(null);
            }
        
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnRegresar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListCategorias = new javax.swing.JList<>();
        btnAgregarImagen = new javax.swing.JButton();
        btnEliminarImagen = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtUsuarioRegistrado = new javax.swing.JTextField();
        btnAgregarCategoria = new javax.swing.JButton();
        btnEliminarCateogoria = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtCategoria = new javax.swing.JTextField();
        lblImagen = new javax.swing.JLabel();
        btnSiguiente = new javax.swing.JButton();
        btnAnterior = new javax.swing.JButton();
        btnMostrarImagenes = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel1.setText("Biblioteca");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(302, 14, 95, -1));

        btnRegresar.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        btnRegresar.setText("Regresar");
        btnRegresar.setBorder(null);
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        getContentPane().add(btnRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 14, -1, -1));

        jListCategorias.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jListCategorias.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(jListCategorias);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 118, 368));

        btnAgregarImagen.setText("Agregar Imagen");
        btnAgregarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarImagenActionPerformed(evt);
            }
        });
        getContentPane().add(btnAgregarImagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, -1, -1));

        btnEliminarImagen.setText("Eliminar Imagen");
        btnEliminarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarImagenActionPerformed(evt);
            }
        });
        getContentPane().add(btnEliminarImagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 60, -1, -1));

        jLabel2.setText("Cateogrias");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        txtUsuarioRegistrado.setEditable(false);
        txtUsuarioRegistrado.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtUsuarioRegistrado.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtUsuarioRegistrado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsuarioRegistradoActionPerformed(evt);
            }
        });
        getContentPane().add(txtUsuarioRegistrado, new org.netbeans.lib.awtextra.AbsoluteConstraints(605, 14, 98, -1));

        btnAgregarCategoria.setText("Agregar Categoria");
        btnAgregarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarCategoriaActionPerformed(evt);
            }
        });
        getContentPane().add(btnAgregarCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 450, 150, -1));

        btnEliminarCateogoria.setText("Eliminar Categoria");
        btnEliminarCateogoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarCateogoriaActionPerformed(evt);
            }
        });
        getContentPane().add(btnEliminarCateogoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 480, 150, -1));

        jLabel3.setText("Usuario:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(541, 20, -1, -1));
        getContentPane().add(txtCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 450, 118, -1));

        lblImagen.setBackground(new java.awt.Color(255, 255, 255));
        lblImagen.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(lblImagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 90, 430, 350));

        btnSiguiente.setText(">>");
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });
        getContentPane().add(btnSiguiente, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 250, 49, -1));

        btnAnterior.setText("<<");
        btnAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnteriorActionPerformed(evt);
            }
        });
        getContentPane().add(btnAnterior, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 250, 49, -1));

        btnMostrarImagenes.setText("Mostrar Imagenes");
        btnMostrarImagenes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarImagenesActionPerformed(evt);
            }
        });
        getContentPane().add(btnMostrarImagenes, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 450, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        if(evt.getSource()==btnRegresar){
            FrmLogIn Inicio = new FrmLogIn(data);
            Inicio.setDefaultCloseOperation(FrmCrearUsuario.DISPOSE_ON_CLOSE);
            Inicio.setLocationRelativeTo(null);
            Inicio.setVisible(true);
            this.setVisible(false);
        }
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void txtUsuarioRegistradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsuarioRegistradoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsuarioRegistradoActionPerformed

    private void btnAgregarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarCategoriaActionPerformed
        String nuevaCategoria = txtCategoria.getText().trim();
        
        if (usuarioActual.GetCategoria(nuevaCategoria)==true) {
            JOptionPane.showMessageDialog(this, "Categoria ya existe!", "Error", JOptionPane.ERROR_MESSAGE);
            txtCategoria.setText("");
            return;
        }
        
        usuarioActual.AgregarCategoria(nuevaCategoria);
        cargarCategorias();
        txtCategoria.setText("");
   
    }//GEN-LAST:event_btnAgregarCategoriaActionPerformed

    private void btnEliminarCateogoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarCateogoriaActionPerformed
       String categoriaSeleccionada = txtCategoria.getText().trim();
         
           if( categoriaSeleccionada.isBlank()){
                JOptionPane.showMessageDialog(this, "No hay categoria para eliminar!", "Error", JOptionPane.ERROR_MESSAGE);
                txtCategoria.setText("");
                txtCategoria.setEditable(true);
                return;
            }
        
        usuarioActual.eliminarCategoria(categoriaSeleccionada);
        cargarCategorias();
        txtCategoria.setEditable(true);
        
    }//GEN-LAST:event_btnEliminarCateogoriaActionPerformed

    private void btnAgregarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarImagenActionPerformed
        String rutaImagen="";
        String categoriaSeleccionada = jListCategorias.getSelectedValue();
        
        if(categoriaSeleccionada==null){
          JOptionPane.showMessageDialog(this, "Debe seleccionar Categoria!", "Error", JOptionPane.ERROR_MESSAGE);
          return;
        }
        
        JFileChooser jfileChooser = new JFileChooser();
        FileNameExtensionFilter extensionImagen = new FileNameExtensionFilter("JPG", "jpg");
        jfileChooser.setFileFilter(extensionImagen);
        
        int accionPorEjecutar = jfileChooser.showOpenDialog(this);
        
        if(accionPorEjecutar==jfileChooser.APPROVE_OPTION){
            rutaImagen = jfileChooser.getSelectedFile().getPath();

            usuarioActual.ListaImagenes.agregar(rutaImagen, categoriaSeleccionada);
            JOptionPane.showMessageDialog( this,  "Imagen Agregada!");
        }
    }//GEN-LAST:event_btnAgregarImagenActionPerformed

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
     //   String rutaTemporal = "";
        String categoriaSeleccionada = jListCategorias.getSelectedValue();
        imagenTemporal = usuarioActual.getListaImagenes().getInicio(); 
       
        if(imagenTemporal != null){
            if(categoriaSeleccionada.equals(imagenTemporal.getCategoria())) {
                rutaTemporal = imagenTemporal.getImagePath();
                System.out.println("Siguiente");
                System.out.println(rutaTemporal);
                Image imagenNueva = new ImageIcon(rutaTemporal).getImage();
                ImageIcon iconoNuevo = new ImageIcon(imagenNueva.getScaledInstance(lblImagen.getWidth(), lblImagen.getHeight(), Image.SCALE_SMOOTH));
                lblImagen.setIcon(iconoNuevo);
            }
            imagenTemporal=imagenTemporal.getNodoSiguiente();     
        }
        
        if(imagenTemporal == null){
                imagenTemporal= usuarioActual.getListaImagenes().getInicio(); 
            }
    }//GEN-LAST:event_btnSiguienteActionPerformed

    private void btnAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnteriorActionPerformed
      //   String rutaTemporal = "";
         String categoriaSeleccionada = jListCategorias.getSelectedValue();
         
        if(imagenTemporal != null){
            if(categoriaSeleccionada.equals(imagenTemporal.getCategoria())) {
                rutaTemporal = imagenTemporal.getImagePath();
                System.out.println("Anterior");
                System.out.println(rutaTemporal);
                Image imagenNueva = new ImageIcon(rutaTemporal).getImage();
                ImageIcon iconoNuevo = new ImageIcon(imagenNueva.getScaledInstance(lblImagen.getWidth(), lblImagen.getHeight(), Image.SCALE_SMOOTH));
                lblImagen.setIcon(iconoNuevo);
            }
            imagenTemporal=imagenTemporal.getNodoAnterior();
   
        }
        
        if(imagenTemporal == null){
                imagenTemporal=usuarioActual.getListaImagenes().getFinListaImagenes();
        }
    }//GEN-LAST:event_btnAnteriorActionPerformed

    private void btnMostrarImagenesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarImagenesActionPerformed
    String categoriaSeleccionada = jListCategorias.getSelectedValue();
    String rutaImagen="";
    String rutaTemporal = "";

    imagenActual = usuarioActual.getListaImagenes().getInicio();

    while(imagenActual != null) {
        if(categoriaSeleccionada.equals(imagenActual.getCategoria())) {
            rutaTemporal = imagenActual.getImagePath();
            Image imagenNueva = new ImageIcon(rutaTemporal).getImage();
            ImageIcon iconoNuevo = new ImageIcon(imagenNueva.getScaledInstance(lblImagen.getWidth(), lblImagen.getHeight(), Image.SCALE_SMOOTH));
            lblImagen.setIcon(iconoNuevo);
            btnAnterior.setEnabled(true);
            btnSiguiente.setEnabled(true);
            break; 
        }
        imagenActual = imagenActual.getNodoSiguiente(); 
    }

    if(imagenActual == null) { 
        lblImagen.setIcon(null);           
        JOptionPane.showMessageDialog(this, "No hay imagenes para mostrar!", "Error", JOptionPane.ERROR_MESSAGE);
        btnAnterior.setEnabled(false);
        btnSiguiente.setEnabled(false);
    }

             
    }//GEN-LAST:event_btnMostrarImagenesActionPerformed

    private void btnEliminarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarImagenActionPerformed
    if (jListCategorias.getSelectedValue() != null) {
            //aqui almaceno en un string el objeto seleccionado de la list 

            String categoriaSeleccionada = jListCategorias.getSelectedValue();
            //String ruta = imagenActual.getImagePath();

            if (imagenActual != null) {
                try{
                usuarioActual.ListaImagenes.EliminarImagen(rutaTemporal, categoriaSeleccionada);
                System.out.println("<url eliminado>" + rutaTemporal);
                JOptionPane.showMessageDialog(this, "la imagen ha sido eliminada");
                }catch(Exception e){
                    e.getMessage();
                }
            }

        } else {
            JOptionPane.showMessageDialog(this, "Debes de selecciona una categoria, para eliminar dicha imagen");
        }       
    }//GEN-LAST:event_btnEliminarImagenActionPerformed

    
    private void cargarCategorias(){
        ArrayList<String> listaCategorias = usuarioActual.getListaCategorias();
        
        modelo.removeAllElements();
        for (int i = 0; i < listaCategorias.size(); i++) {
            //jListCategorias.add(listaCategorias.get(i), i);
            
            modelo.addElement(listaCategorias.get(i));
        }
    }
    
    
    
    
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(FrmBiblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(FrmBiblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(FrmBiblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(FrmBiblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new FrmBiblioteca().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarCategoria;
    private javax.swing.JButton btnAgregarImagen;
    private javax.swing.JButton btnAnterior;
    private javax.swing.JButton btnEliminarCateogoria;
    private javax.swing.JButton btnEliminarImagen;
    private javax.swing.JButton btnMostrarImagenes;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jListCategorias;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblImagen;
    private javax.swing.JTextField txtCategoria;
    private javax.swing.JTextField txtUsuarioRegistrado;
    // End of variables declaration//GEN-END:variables
}
