/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vistas;

import Data.Data;
import HandlersImagen.BlancoYNegroJPG;
import HandlersImagen.CambioJpgBmp;
import HandlersImagen.CopiaJpg;
import HandlersImagen.ModificarJPG;
import HandlersImagen.RgbJPG;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import proyecto2.JPEGHandler;

/**
 *
 * @author lenovo
 */
public class FrmEditor extends javax.swing.JFrame {
    Data data;
    String rutaImagen="";
    /**
     * Creates new form FrmEditor
     */
    public FrmEditor(Data data) {
        initComponents();
        this.data=data;
        this.setTitle("Editor");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        btnSeleccionarImagen = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();
        btnEjecutar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jCheckBoxRGB = new javax.swing.JCheckBox();
        jCheckBoxJpgABmp = new javax.swing.JCheckBox();
        jCheckBoxCopiarAJpg = new javax.swing.JCheckBox();
        jCheckBoxModificarImagen = new javax.swing.JCheckBox();
        jCheckBoxBlancoNegro = new javax.swing.JCheckBox();
        lblImagenEditor = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnSeleccionarImagen.setText("Seleccionar Imagen");
        btnSeleccionarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarImagenActionPerformed(evt);
            }
        });

        btnRegresar.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        btnRegresar.setText("Regresar");
        btnRegresar.setBorder(null);
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        btnEjecutar.setText("Ejecutar");
        btnEjecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEjecutarActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        buttonGroup1.add(jCheckBoxRGB);
        jCheckBoxRGB.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        jCheckBoxRGB.setText("Rojo Verde Azul y Sepia");
        jCheckBoxRGB.setActionCommand("RGB");
        jCheckBoxRGB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxRGBActionPerformed(evt);
            }
        });

        buttonGroup1.add(jCheckBoxJpgABmp);
        jCheckBoxJpgABmp.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        jCheckBoxJpgABmp.setText("JPG a BMP y viceversa");
        jCheckBoxJpgABmp.setActionCommand("Jpg_Bmp");
        jCheckBoxJpgABmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxJpgABmpActionPerformed(evt);
            }
        });

        buttonGroup1.add(jCheckBoxCopiarAJpg);
        jCheckBoxCopiarAJpg.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        jCheckBoxCopiarAJpg.setText("Copiar a JPG");
        jCheckBoxCopiarAJpg.setActionCommand("Copiar_JPG");

        buttonGroup1.add(jCheckBoxModificarImagen);
        jCheckBoxModificarImagen.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        jCheckBoxModificarImagen.setText("Modificar Imagen");
        jCheckBoxModificarImagen.setActionCommand("Modificar_Imagen");
        jCheckBoxModificarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxModificarImagenActionPerformed(evt);
            }
        });

        buttonGroup1.add(jCheckBoxBlancoNegro);
        jCheckBoxBlancoNegro.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        jCheckBoxBlancoNegro.setText("Blanco y Negro");
        jCheckBoxBlancoNegro.setActionCommand("Blanco_Negro");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxBlancoNegro, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxCopiarAJpg, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxJpgABmp, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxModificarImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(256, 256, 256))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBoxRGB, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jCheckBoxJpgABmp)
                .addGap(18, 18, 18)
                .addComponent(jCheckBoxCopiarAJpg)
                .addGap(18, 18, 18)
                .addComponent(jCheckBoxRGB)
                .addGap(18, 18, 18)
                .addComponent(jCheckBoxModificarImagen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBoxBlancoNegro)
                .addGap(22, 22, 22))
        );

        lblImagenEditor.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(79, 79, 79)
                                .addComponent(btnEjecutar))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblImagenEditor, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnSeleccionarImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnRegresar)))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(btnRegresar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSeleccionarImagen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblImagenEditor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEjecutar))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        if(evt.getSource()==btnRegresar){
            FrmLogIn Inicio = new FrmLogIn(data);
            Inicio.setDefaultCloseOperation(FrmCrearUsuario.DISPOSE_ON_CLOSE);
            Inicio.setLocationRelativeTo(null);
            Inicio.setVisible(true);
            this.setVisible(false);
        }
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void jCheckBoxRGBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxRGBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxRGBActionPerformed

    private void btnEjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEjecutarActionPerformed
       if(lblImagenEditor.getIcon() == null){
          JOptionPane.showMessageDialog(this, "Debe seleccionar una imagen!", "Error", JOptionPane.ERROR_MESSAGE);   
          return;
        }

        if( !validarCamposEditor() ){
            return;
        }
        
       String opcionDeEdicion = buttonGroup1.getSelection().getActionCommand();
        
        switch(opcionDeEdicion) {
            case "Blanco_Negro":
                BlancoYNegroJPG handlerBn = new BlancoYNegroJPG(rutaImagen);
                try {
                    JPEGHandler.runHandler(handlerBn);
                } catch (Exception e) {
                    e.printStackTrace();
                }
                break;
            case "RGB":
                RgbJPG handlerRgb = new RgbJPG(rutaImagen);
                try {
                    JPEGHandler.runHandler(handlerRgb);
                } catch (Exception e) {
                    e.printStackTrace();
                }
                break;
            case "Modificar_Imagen":
                ModificarJPG handlerModificar = new ModificarJPG(rutaImagen);
                try {
                    JPEGHandler.runHandler(handlerModificar);
                } catch (Exception e) {
                    e.printStackTrace();
                }
                break;  
            case "Jpg_Bmp":
                CambioJpgBmp handlerCambiar = new CambioJpgBmp(rutaImagen);
                try {
                    JPEGHandler.runHandler(handlerCambiar);
                } catch (Exception e) {
                    e.printStackTrace();
                }
                break;  
            case "Copiar_JPG":
                CopiaJpg handlerCopiaJpg = new CopiaJpg(rutaImagen);
                try {
                    JPEGHandler.runHandler(handlerCopiaJpg);
                } catch (Exception e) {
                    e.printStackTrace();
                }
                break;  
                
            default:
                break;
       }
    }//GEN-LAST:event_btnEjecutarActionPerformed

    private void jCheckBoxModificarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxModificarImagenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxModificarImagenActionPerformed

    private void jCheckBoxJpgABmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxJpgABmpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxJpgABmpActionPerformed

    private void btnSeleccionarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarImagenActionPerformed
        
        JFileChooser jfileChooser = new JFileChooser();
        FileNameExtensionFilter extensionImagen = new FileNameExtensionFilter("JPG", "jpg");
        jfileChooser.setFileFilter(extensionImagen);
        
        int accionPorEjecutar = jfileChooser.showOpenDialog(this);
        
        if(accionPorEjecutar==jfileChooser.APPROVE_OPTION){
            rutaImagen = jfileChooser.getSelectedFile().getPath();
            Image imagenNueva = new ImageIcon(rutaImagen).getImage();
            ImageIcon iconoNuevo = new ImageIcon(imagenNueva.getScaledInstance(lblImagenEditor.getWidth(), lblImagenEditor.getHeight(), Image.SCALE_SMOOTH));
            lblImagenEditor.setIcon(iconoNuevo);
            
        }
    }//GEN-LAST:event_btnSeleccionarImagenActionPerformed


private boolean validarCamposEditor(){
        if(jCheckBoxBlancoNegro.isSelected()==false && jCheckBoxRGB.isSelected()==false && jCheckBoxJpgABmp.isSelected()==false 
                && jCheckBoxCopiarAJpg.isSelected()==false && jCheckBoxModificarImagen.isSelected()==false){
            JOptionPane.showMessageDialog(this, "Seleccione una opcion!", "Error", JOptionPane.ERROR_MESSAGE);          
            return  false;
        }
    return true;
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEjecutar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton btnSeleccionarImagen;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox jCheckBoxBlancoNegro;
    private javax.swing.JCheckBox jCheckBoxCopiarAJpg;
    private javax.swing.JCheckBox jCheckBoxJpgABmp;
    private javax.swing.JCheckBox jCheckBoxModificarImagen;
    private javax.swing.JCheckBox jCheckBoxRGB;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblImagenEditor;
    // End of variables declaration//GEN-END:variables
}
